{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jo\\xE3o\\\\Desktop\\\\MiniBlog\\\\FrontEnd\\\\src\\\\components\\\\PostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n\n// Styled components para o modal\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n`;\n_c = ModalOverlay;\nconst ModalContent = styled.div`\n  background: white;\n  padding: 30px;\n  border-radius: 10px;\n  width: 90%;\n  max-width: 500px;\n  box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.1);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n_c2 = ModalContent;\nconst CloseButton = styled.button`\n  position: absolute;\n  top: 15px;\n  right: 20px;\n  background: none;\n  border: none;\n  font-size: 20px;\n  cursor: pointer;\n  color: #888;\n\n  &:hover {\n    color: #000;\n  }\n`;\n_c3 = CloseButton;\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n_c4 = Form;\nconst Label = styled.label`\n  margin-bottom: 10px;\n  font-size: 14px;\n  color: #333;\n`;\n_c5 = Label;\nconst Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  margin-bottom: 20px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  font-size: 16px;\n`;\n_c6 = Input;\nconst TextArea = styled.textarea`\n  width: 100%;\n  padding: 10px;\n  margin-bottom: 20px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  font-size: 16px;\n  resize: vertical;\n`;\n_c7 = TextArea;\nconst SubmitButton = styled.button`\n  background-color: #007bff;\n  color: white;\n  border: none;\n  padding: 12px;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 16px;\n  width: 100%;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n`;\n_c8 = SubmitButton;\nconst PostForm = ({\n  onAddPost,\n  onClose\n}) => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [image, setImage] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (title && description) {\n      onAddPost({\n        title,\n        description\n      });\n      setTitle('');\n      setDescription('');\n      setImage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ModalOverlay, {\n    children: /*#__PURE__*/_jsxDEV(ModalContent, {\n      children: [/*#__PURE__*/_jsxDEV(CloseButton, {\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Criar Nova Postagem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"title\",\n          children: \"T\\xEDtulo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"title\",\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          maxLength: \"50\",\n          placeholder: \"Digite o t\\xEDtulo da postagem\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"description\",\n          children: \"Descri\\xE7\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n          id: \"description\",\n          rows: \"5\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          placeholder: \"Digite a descri\\xE7\\xE3o da postagem\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"image\",\n          children: \"URL da Imagem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Input, {\n          id: \"image\",\n          type: \"text\",\n          value: image,\n          onChange: e => setImage(e.target.value),\n          placeholder: \"Digite a URL da imagem (opcional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n          type: \"submit\",\n          children: \"Adicionar Postagem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(PostForm, \"1don09NotN7r7YaY6cPt3KgHz6A=\");\n_c9 = PostForm;\nexport default PostForm;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"ModalOverlay\");\n$RefreshReg$(_c2, \"ModalContent\");\n$RefreshReg$(_c3, \"CloseButton\");\n$RefreshReg$(_c4, \"Form\");\n$RefreshReg$(_c5, \"Label\");\n$RefreshReg$(_c6, \"Input\");\n$RefreshReg$(_c7, \"TextArea\");\n$RefreshReg$(_c8, \"SubmitButton\");\n$RefreshReg$(_c9, \"PostForm\");","map":{"version":3,"names":["React","useState","styled","jsxDEV","_jsxDEV","ModalOverlay","div","_c","ModalContent","_c2","CloseButton","button","_c3","Form","form","_c4","Label","label","_c5","Input","input","_c6","TextArea","textarea","_c7","SubmitButton","_c8","PostForm","onAddPost","onClose","_s","title","setTitle","description","setDescription","image","setImage","handleSubmit","e","preventDefault","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","value","onChange","target","maxLength","placeholder","required","rows","_c9","$RefreshReg$"],"sources":["C:/Users/João/Desktop/MiniBlog/FrontEnd/src/components/PostForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// Styled components para o modal\r\nconst ModalOverlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  background: white;\r\n  padding: 30px;\r\n  border-radius: 10px;\r\n  width: 90%;\r\n  max-width: 500px;\r\n  box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.1);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst CloseButton = styled.button`\r\n  position: absolute;\r\n  top: 15px;\r\n  right: 20px;\r\n  background: none;\r\n  border: none;\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n  color: #888;\r\n\r\n  &:hover {\r\n    color: #000;\r\n  }\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  margin-bottom: 10px;\r\n  font-size: 14px;\r\n  color: #333;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-bottom: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst TextArea = styled.textarea`\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-bottom: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n  resize: vertical;\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  padding: 12px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  width: 100%;\r\n\r\n  &:hover {\r\n    background-color: #0056b3;\r\n  }\r\n`;\r\n\r\nconst PostForm = ({ onAddPost, onClose }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [image, setImage] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (title && description) {\r\n      onAddPost({ title, description });\r\n      setTitle('');\r\n      setDescription('');\r\n      setImage('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ModalOverlay>\r\n      <ModalContent>\r\n        <CloseButton onClick={onClose}>&times;</CloseButton>\r\n        <h2>Criar Nova Postagem</h2>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Label htmlFor=\"title\">Título</Label>\r\n          <Input\r\n            id=\"title\"\r\n            type=\"text\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            maxLength=\"50\"\r\n            placeholder=\"Digite o título da postagem\"\r\n            required\r\n          />\r\n          <Label htmlFor=\"description\">Descrição</Label>\r\n          <TextArea\r\n            id=\"description\"\r\n            rows=\"5\"\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n            placeholder=\"Digite a descrição da postagem\"\r\n            required\r\n          />\r\n          <Label htmlFor=\"image\">URL da Imagem</Label> {/* novo campo para imagem */}\r\n          <Input\r\n            id=\"image\"\r\n            type=\"text\"\r\n            value={image}\r\n            onChange={(e) => setImage(e.target.value)}\r\n            placeholder=\"Digite a URL da imagem (opcional)\"\r\n          />\r\n          <SubmitButton type=\"submit\">Adicionar Postagem</SubmitButton>\r\n        </Form>\r\n      </ModalContent>\r\n    </ModalOverlay>\r\n  );\r\n};\r\n\r\nexport default PostForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}